import { CoopObject, PaginationOptions } from '../base/coopObject';
import { AdditionalRequestOptions } from '../coop';
import { ProductModel, ProductQueryModel } from './productModel';
export interface ProductOptions extends PaginationOptions {
    attrs?: string;
    attributeGroup?: string;
    returnSortKeys?: boolean;
    productFilter?: string;
    filters?: ProductFilter;
}
export declare class Product extends CoopObject {
    /**
     * Get product from ID
     * @param productId Product ID (sku, 13 digits)
     */
    getProductFromId(productId: number, additionalRequestOptions?: AdditionalRequestOptions): Promise<ProductModel>;
    /**
     * Get products ffrom given product name
     * @param productName Product name to search for
     * @param options Options for the query
     * @param options.offset Offset for pagination
     * @param options.amount Amount of products to return
     * @param options.attrs Attributes to return (default: all)
     * @param options.attributeGroup Attribute group to return
     * @param options.returnSortKeys Return sort keys (default: true)
     * @param options.productFilter productFilter option (function unknown)
     * @param options.filters Filter to apply (from ProductFilter)
     */
    getProductsFromName(productName: string, options?: ProductOptions, additionalRequestOptions?: AdditionalRequestOptions): Promise<ProductQueryModel>;
}
export declare enum ProductFilter {
    Organic = "1:Biologisch",
    Conscious = "1:Bewuste voeding",
    GlutenFree = "1:Glutenvrije producten",
    LactoseFree = "1:Lactosevrije producten"
}
