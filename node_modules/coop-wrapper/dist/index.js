'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var axios = require('axios');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var axios__default = /*#__PURE__*/_interopDefaultLegacy(axios);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

class CoopObject {
    constructor(coop) {
        this.coop = coop;
    }
}

class Product extends CoopObject {
    /**
     * Get product from ID
     * @param productId Product ID (sku, 13 digits)
     */
    getProductFromId(productId, additionalRequestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.coop.get(`-;loc=nl_NL;cur=EUR/products/${productId}`, additionalRequestOptions);
        });
    }
    /**
     * Get products ffrom given product name
     * @param productName Product name to search for
     * @param options Options for the query
     * @param options.offset Offset for pagination
     * @param options.amount Amount of products to return
     * @param options.attrs Attributes to return (default: all)
     * @param options.attributeGroup Attribute group to return
     * @param options.returnSortKeys Return sort keys (default: true)
     * @param options.productFilter productFilter option (function unknown)
     * @param options.filters Filter to apply (from ProductFilter)
     */
    getProductsFromName(productName, options, additionalRequestOptions) {
        var _a, _b, _c, _d, _e, _f, _g;
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.coop.get('-/culios/products', Object.assign({ query: {
                    searchTerm: productName,
                    amount: ((_a = options === null || options === void 0 ? void 0 : options.amount) !== null && _a !== void 0 ? _a : 10).toString(),
                    offset: ((_b = options === null || options === void 0 ? void 0 : options.offset) !== null && _b !== void 0 ? _b : 0).toString(),
                    attrs: (_c = options === null || options === void 0 ? void 0 : options.attrs) !== null && _c !== void 0 ? _c : 'sku%2CsalePrice%2ClistPrice%2Cavailability%2Cmanufacturer%2Cimage%2CminOrderQuantity%2CinStock%2Cpromotions%2CpackingUnit%2Cmastered%2CproductMaster%2CproductMasterSKU%2CroundedAverageRating%2Clongtail%2Csticker%2CmaxXLabel%2CInhoud',
                    attributeGroup: (_d = options === null || options === void 0 ? void 0 : options.attributeGroup) !== null && _d !== void 0 ? _d : 'PRODUCT_LIST_DETAIL_ATTRIBUTES',
                    returnSortKeys: ((_e = options === null || options === void 0 ? void 0 : options.returnSortKeys) !== null && _e !== void 0 ? _e : true).toString(),
                    productFilter: (_f = options === null || options === void 0 ? void 0 : options.productFilter) !== null && _f !== void 0 ? _f : '',
                    filters: (_g = options === null || options === void 0 ? void 0 : options.filters) !== null && _g !== void 0 ? _g : ''
                } }, additionalRequestOptions));
        });
    }
}
exports.ProductFilter = void 0;
(function (ProductFilter) {
    ProductFilter["Organic"] = "1:Biologisch";
    ProductFilter["Conscious"] = "1:Bewuste voeding";
    ProductFilter["GlutenFree"] = "1:Glutenvrije producten";
    ProductFilter["LactoseFree"] = "1:Lactosevrije producten";
})(exports.ProductFilter || (exports.ProductFilter = {}));

class Recipe extends CoopObject {
    /**
     * Gets ingredients from recipe ID
     * @param recipeId Recipe ID (5 digits)
     * @param options Query options
     * @param options.persons Amount of persons (default 1)
     * @param options.primary Default true
     */
    getIngredientsFromRecipe(recipeId, options, additionalRequestOptions) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.coop.get(`-;loc=nl_NL;cur=EUR/recipes/${recipeId}/ingredients`, Object.assign({ query: {
                    persons: ((_a = options === null || options === void 0 ? void 0 : options.persons) !== null && _a !== void 0 ? _a : 1).toString(),
                    primary: ((_b = options === null || options === void 0 ? void 0 : options.primary) !== null && _b !== void 0 ? _b : true).toString()
                } }, additionalRequestOptions));
        });
    }
    /**
     * Get recipes from given recipe name
     * @param recipeName Recipe name to search for
     * @param options Query options
     * @param options.offset Page number (default 1)
     * @param options.amount Amount of recipes to return (default 10)
     * @param options.prioritized Prioritize recipes (default true)
     * @param options.sort Sort options
     */
    getRecipesFromName(recipeName, options, additionalRequestOptions) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.coop.get('-;loc=nl_NL;cur=EUR/recipes/search', Object.assign({ query: {
                    searchterm: recipeName,
                    prioritized: ((_a = options === null || options === void 0 ? void 0 : options.prioritized) !== null && _a !== void 0 ? _a : true).toString(),
                    items_per_page: ((_b = options === null || options === void 0 ? void 0 : options.amount) !== null && _b !== void 0 ? _b : 10).toString(),
                    page: ((_c = options === null || options === void 0 ? void 0 : options.offset) !== null && _c !== void 0 ? _c : 1).toString(),
                    sort_fields: (_d = options === null || options === void 0 ? void 0 : options.sort) !== null && _d !== void 0 ? _d : ''
                } }, additionalRequestOptions));
        });
    }
}
exports.RecipeSortOptions = void 0;
(function (RecipeSortOptions) {
    RecipeSortOptions["Relevant"] = "";
    RecipeSortOptions["Newest"] = "created_timestamp";
    RecipeSortOptions["PreperationTime"] = "preparation_time";
})(exports.RecipeSortOptions || (exports.RecipeSortOptions = {}));

class Coop {
    constructor(options) {
        var _a;
        this.endpoint = 'https://api.coop.nl/INTERSHOP/rest/WFS/COOP-2800-Site/';
        this.verbose = (_a = options === null || options === void 0 ? void 0 : options.verbose) !== null && _a !== void 0 ? _a : false;
        this.client = axios__default["default"].create();
        this.coopProduct = new Product(this);
        this.coopRecipe = new Recipe(this);
    }
    product() {
        return this.coopProduct;
    }
    recipe() {
        return this.coopRecipe;
    }
    get(path, additionalRequestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(path, exports.requestMethod.GET, undefined, additionalRequestOptions);
        });
    }
    request(path, method, body, additionalRequestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            const requestHeader = this.createHeader(additionalRequestOptions === null || additionalRequestOptions === void 0 ? void 0 : additionalRequestOptions.headers);
            const url = this.createURL(path, additionalRequestOptions === null || additionalRequestOptions === void 0 ? void 0 : additionalRequestOptions.query);
            if (this.verbose) {
                console.log(url);
                console.log(method);
                console.log(requestHeader);
                void (body && console.log(body));
            }
            const response = yield this.client.request({
                method,
                url,
                headers: requestHeader,
                data: body
            });
            if (!response.statusText) {
                const text = response.data;
                throw new Error(`${response.statusText}: ${text}`);
            }
            return response.data;
        });
    }
    createHeader(extraHeaders) {
        // Create header
        const headers = Object.assign({ 'Content-Type': 'application/json', 'User-Agent': 'coop-wrapper' }, extraHeaders);
        return headers;
    }
    createURL(path, query) {
        let url;
        if (query) {
            const params = new URLSearchParams(query);
            url = this.endpoint + path + '?' + params;
        }
        else {
            url = this.endpoint + path;
        }
        return url;
    }
}
/**
 * Simple enum for different request methods
 */
exports.requestMethod = void 0;
(function (requestMethod) {
    requestMethod["GET"] = "GET";
    requestMethod["POST"] = "POST";
    requestMethod["PUT"] = "PUT";
})(exports.requestMethod || (exports.requestMethod = {}));

exports.Coop = Coop;
exports.Product = Product;
exports.Recipe = Recipe;
