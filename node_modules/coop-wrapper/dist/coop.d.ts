import { Product } from './product';
import { Recipe } from './recipe';
export interface CoopClientOptions {
    verbose?: boolean;
}
export declare class Coop {
    private endpoint;
    private readonly client;
    private verbose;
    private readonly coopProduct;
    private readonly coopRecipe;
    constructor(options?: CoopClientOptions);
    product(): Product;
    recipe(): Recipe;
    get(path: string, additionalRequestOptions?: AdditionalRequestOptions): Promise<any>;
    request(path: string, method: requestMethod, body?: Record<string, unknown>, additionalRequestOptions?: AdditionalRequestOptions): Promise<any>;
    createHeader(extraHeaders?: Headers): Headers;
    createURL(path: string, query?: Query): string;
}
/**
 * Simple enum for different request methods
 */
export declare enum requestMethod {
    GET = "GET",
    POST = "POST",
    PUT = "PUT"
}
/**
 * Query interface that is converted to {@URLSearchParams}
 */
export interface Query {
    [key: string]: string;
}
export interface Headers {
    [key: string]: string;
}
/**
 * Interface that combines additional headers and query options
 */
export interface AdditionalRequestOptions {
    headers?: Headers;
    query?: Query;
}
